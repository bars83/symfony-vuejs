stages:
  - artifacts
  - containerize
#assets:
#  stage: artifacts
#  image:
#    name: node:8
#  cache:
#    key: "${CI_COMMIT_REF_SLUG}-node-modules"
#    paths:
#      - node_modules/
#  artifacts:
#    paths:
#      - public/build
#    expire_in: 3 day
#  script:
#    - yarn install --network-timeout 100000
#    - yarn build
build-php-base:
  stage: artifacts
  image: docker:git
  services:
      - name: docker:18.09.7-dind
        command: ["--mtu=1300"]
  script:
    - setup_docker
    - echo "Logging to GitLab Container Registry with CI credentials..."
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE/php-base:$CI_COMMIT_REF_SLUG --build-arg BUILD_TIME="$(date "+%Y-%m-%d %H:%M:%S")" ./docker/php-base
    - docker push $CI_REGISTRY_IMAGE/php-base:$CI_COMMIT_REF_SLUG

vendors:
  stage: artifacts
  image: $CI_REGISTRY_IMAGE/php-base:$CI_COMMIT_REF_SLUG
  services:
    - name: docker:18.09.7-dind
      command: ["--mtu=1300"]
  before_script:
    - composer config -g cache-dir "$(pwd)/.composer-cache"
  cache:
    key: "${CI_COMMIT_REF_SLUG}-vendor"
    paths:
      - vendor/
      - .composer-cache/
  artifacts:
    paths:
      - vendor
      - var
    expire_in: 1 hour
  script:
    - composer install --verbose --ignore-platform-reqs --optimize-autoloader --no-ansi --no-interaction --no-progress
    - php bin/console cache:clear --env=prod
containerize:
  image: docker:latest
  services:
    - name: docker:18.09.7-dind
      command: ["--mtu=1300"]
  stage: containerize
  script:
    - echo "Logging to GitLab Container Registry with CI credentials..."
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE/php:$CI_COMMIT_REF_SLUG --build-arg BUILD_TIME="$(date "+%Y-%m-%d %H:%M:%S")" --build-arg CI_REGISTRY_IMAGE=$CI_REGISTRY_IMAGE --build-arg CI_COMMIT_REF_SLUG=$CI_COMMIT_REF_SLUG -f ./docker/php/Dockerfile .
    - docker push $CI_REGISTRY_IMAGE/php-base:$CI_COMMIT_REF_SLUG
    - rm -rf ./vendor
    - rm -rf ./node_modules
    - docker push $CI_REGISTRY_IMAGE/php:$CI_COMMIT_REF_SLUG

.auto_devops: &auto_devops |
  [[ "$TRACE" ]] && set -x
  export CI_APPLICATION_REPOSITORY=$CI_REGISTRY/$CI_PROJECT_PATH
  export CI_APPLICATION_TAG=$CI_COMMIT_REF_SLUG
  export CI_CONTAINER_NAME=ci_job_build_${CI_JOB_ID}
  export TILLER_NAMESPACE="kube-system"


  function setup_docker() {
      if ! docker info &>/dev/null; then
        if [ -z "$DOCKER_HOST" -a "$KUBERNETES_PORT" ]; then
          export DOCKER_HOST='tcp://localhost:2375'
        fi
      fi
    }

  function build() {

    echo "Building Dockerfile-based application..."
    echo `git show --format="%h" HEAD | head -1` > build_info.txt
    echo `git rev-parse --abbrev-ref HEAD` >> build_info.txt
    cat build_info.txt
    docker build -t "$CI_APPLICATION_REPOSITORY:$CI_APPLICATION_TAG" .

    docker build -t $CI_REGISTRY_IMAGE/php-base --build-arg BUILD_TIME="$(date "+%Y-%m-%d %H:%M:%S")" ./docker/php-base
    docker push $CI_REGISTRY_IMAGE/php-base

    if [[ -n "$CI_REGISTRY_USER" ]]; then
      echo "Logging to GitLab Container Registry with CI credentials..."
      docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
      echo ""
    fi

    echo "Pushing to GitLab Container Registry..."
    docker push "$CI_APPLICATION_REPOSITORY:$CI_APPLICATION_TAG"
    echo ""
  }


before_script:
  - *auto_devops
